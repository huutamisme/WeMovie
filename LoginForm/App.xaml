<Application x:Class="LoginForm.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LoginForm"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             StartupUri="EditVoucher.xaml">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <!-- MahApps.Metro resource dictionaries. Make sure that all file names are Case Sensitive! -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <!-- Accent and AppTheme setting -->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Light.Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="Styles/UIColors.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="styleListBoxItems"
                   TargetType="{x:Type ListBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="False" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border Name="Border"
                                    Padding="7"
                                    SnapsToDevicePixels="True">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value=".56" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="true">
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                        <Setter Property="Background" Value="#FFFFFF"></Setter>
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                        <Setter Property="Background" Value="#F7F7F7"></Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <LinearGradientBrush x:Key="BoxBorderGradient" StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#9C27B0" Offset="0.2"/>
                <GradientStop Color="#2196F3" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="dashboardRightBg" StartPoint="1,0" EndPoint="0,1">
                <GradientStop Color="#41518F" Offset="0" />
                <GradientStop Color="#2C386C" Offset="1" />
            </LinearGradientBrush>

            <!-- primary -->

            <SolidColorBrush x:Key="PrimaryHueLightBrush"
                 Color="#0c70b6" />
            <SolidColorBrush x:Key="PrimaryHueLightForegroundBrush"
                 Color="#FFFFFF" />
            <SolidColorBrush x:Key="PrimaryHueMidBrush"
                 Color="#1976d2" />
            <SolidColorBrush x:Key="PrimaryHueMidForegroundBrush"
                 Color="#FFFFFF" />
            <SolidColorBrush x:Key="MyFirstColor"
                 Color="#FFA5B9D6" />
            <SolidColorBrush x:Key="PrimaryHueDarkBrush"
                 Color="#0c70b6" />
            <SolidColorBrush x:Key="PrimaryHueDarkForegroundBrush"
                 Color="#FFFFFF" />
            
            <!--Add film button-->
            <Style x:Key="addFilmBtn" TargetType="Button" BasedOn="{StaticResource MahApps.Styles.Button}">
                <Setter Property="Width" Value="120"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Content" Value="Add"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Background" Value="{DynamicResource BoxBorderGradient}"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="SignInButtonBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="5">
                                <StackPanel Orientation="Horizontal"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                                    <fa:IconImage Icon="PlusCircle"
                                      Width="25"
                                      Height="25"
                                      VerticalAlignment="Center"/>
                                    <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="5,0,0,0"/>
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Menu button-->
            <Style x:Key="menuButton" TargetType="RadioButton">
                <!--Normal button style-->
                <Setter Property="Height" Value="50"/>
                <Setter Property="Margin" Value="-5,0,0,5"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border Background="{TemplateBinding Background}"
                        BorderThickness="4,0,0,0"
                        BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--Button Style on hover-->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Margin" Value="0,0,0,5"/>
                        <Setter Property="Background" Value="{StaticResource panelOverColor}"/>
                        <Setter Property="Foreground" Value="{StaticResource titleColor3}"/>
                        <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                    <!--Activated button style-->
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Margin" Value="0,0,0,5"/>
                        <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="BorderBrush" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--Menu button icon-->
            <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
                <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
                <Setter Property="Width" Value="22"/>
                <Setter Property="Height" Value="22"/>
                <Setter Property="Margin" Value="35,0,20,0"/>
            </Style>

            <!--Menu button text-->
            <Style x:Key="menuButtonText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=RadioButton}}"/>
                <Setter Property="FontFamily" Value="Montserrat"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="FontSize" Value="13.5"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

            <!--Control bar button-->
            <Style x:Key="controlButton" TargetType="Button">
                <!--Normal button style-->
                <Setter Property="Width" Value="35"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource plainTextColor3}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                        CornerRadius="4">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--Button Style on hover-->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource panelActiveColor}"/>
                        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--Menu button icon-->
            <Style x:Key="controlButtonIcon" TargetType="fa:IconImage">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                <Setter Property="Width" Value="9"/>
                <Setter Property="Height" Value="9"/>
            </Style>
            <!--Icon button-->
            <Style x:Key="iconButton" TargetType="Button">
                <!--Normal button style-->
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{StaticResource plainTextColor1}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <!--Button Style on hover-->
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{Binding Path=Tag, RelativeSource={RelativeSource Self}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--Menu button icon-->
            <Style x:Key="iconButtonIcon" TargetType="fa:IconImage">
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
            </Style>

            <Style x:Key="topMenuButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#9EABE2" />
                <Setter Property="Width" Value="80" />
                <Setter Property="Height" Value="30" />
                <Setter Property="Margin" Value="5 0 0 0" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}" CornerRadius="15">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#5B60C4" />
                        <Setter Property="Foreground" Value="#ffffff" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <Style x:Key="titleText" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FontSize" Value="18" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Margin" Value="10 0 0 0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>


            <Style x:Key="titleIcon" TargetType="fa:IconImage">
                <Setter Property="Foreground" Value="#7B82EA" />
                <Setter Property="Width" Value="18" />
                <Setter Property="Height" Value="18" />
                <Setter Property="Margin" Value="0 3 0 0" />
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
